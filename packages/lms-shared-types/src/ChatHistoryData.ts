import { z } from "zod";
import { type FileType, fileTypeSchema } from "./files/FileType";

/**
 * @public
 */
export interface ChatMessagePartTextData {
  type: "text";
  text: string;
}
export const chatMessagePartTextDataSchema = z.object({
  type: z.literal("text"),
  text: z.string(),
});

/**
 * @public
 */
export interface ChatMessagePartFileData {
  type: "file";
  /**
   * Original file name that is uploaded.
   */
  name: string;
  /**
   * Internal identifier for the file. Autogenerated, and is unique.
   */
  identifier: string;
  /**
   * Size of the file in bytes.
   */
  sizeBytes: number;
  /**
   * Type of the file.
   */
  fileType: FileType;
}
export const chatMessagePartFileDataSchema = z.object({
  type: z.literal("file"),
  name: z.string(),
  identifier: z.string(),
  sizeBytes: z.number(),
  fileType: fileTypeSchema,
});

/**
 * @public
 */
export type ChatMessagePartData = ChatMessagePartTextData | ChatMessagePartFileData;
export const chatMessagePartDataSchema = z.discriminatedUnion("type", [
  chatMessagePartTextDataSchema,
  chatMessagePartFileDataSchema,
]);

/**
 * @public
 */
export type ChatMessageRoleData = "assistant" | "user" | "system";
export const chatMessageRoleDataSchema = z.enum(["assistant", "user", "system"]);

/**
 * @public
 */
export interface ChatMessageData {
  role: ChatMessageRoleData;
  content: Array<ChatMessagePartData>;
}
export const chatMessageDataSchema = z.object({
  role: chatMessageRoleDataSchema,
  content: z.array(chatMessagePartDataSchema),
});

/**
 * @public
 */
export interface ChatHistoryData {
  messages: Array<ChatMessageData>;
}
export const chatHistoryDataSchema = z.object({
  messages: z.array(chatMessageDataSchema),
});
